const { gql } = require('apollo-server')

const userSchema = gql`
    scalar DateTime

    type User {
        nome: String!
        ativo: Boolean!
        email: String
        role: Role!
        createdAt: DateTime
    }

    input UserInput {
        nome: String
        ativo: Boolean
        email: String
        role: RoleTypes #Não pode receber um objeto como tipo, apenas scalares ( string, number, boolean) e outros inputs e listas 
        createdAt: DateTime
    }

    type Role {
        id: ID!
        type: RoleTypes!
    }

    enum RoleTypes {
        ESTUDANTE
        DOCENTE
        COORDENACAO
    }

    type Query {
        users: [User],
        user(id: ID!): User
    }

    type Mutation {
        includeUser(user: UserInput): User!,
        updateUser(id: ID!, user: UserInput): UpdateUserResponse!,
        deleteUserById(id: ID!): DeleteUserResponse!
    }


    interface customResponse {
        #é um tipo abstrato
        code: Int!
        message: String!
    }

    type UpdateUserResponse implements customResponse{
        code: Int!
        message: String! 
        user: User!
    }

    type DeleteUserResponse implements customResponse{
        code: Int!
        message: String! 
    }
`

module.exports = userSchema
